
动手修改 ShadowsocksR 客户端中 的 PAC 规则实现自动代理
摘要https://www.dwhd.org/20160901_223415.html

Shadowsocks作为现在一种很流行的穿墙工具，以其轻量级、速度感人等优点深受广大网友热捧。与VPN相比，他就像一把锋利的”瑞士军刀”，不用受制于“系统全局代理”模式的困扰，控制更加便捷，基于Socks5安全加密协议，防止GFW通过分析流量特征从而干扰的问题。而又不像 GoAgent 这种集中式爬墙模式，一般不会出现全局封锁等现象。不管你是因为什么原因喜欢上Shadowsocks，我相信它一定有给你带来好的体验的方面。

在ShadowsocksR客户端里面，系统代理模式有两种，一种是“全局模式”，另一种是“PAC模式”，通常情况下我们会选择后者，今天这里给大家解析一下 PAC模式的原理以及如何修改PAC文件、user-rule文件实现自动代理，希望大家可以通过本文更的“科学上网”。

动手修改 ShadowsocksR 客户端中 的 PAC 规则实现自动代理 动手修改 ShadowsocksR 客户端中 的 PAC 规则实现自动代理
什么是PAC

代理自动配置（英语：Proxy auto-config，简称PAC）是一种网页浏览器技术，用于定义浏览器该如何自动选择适当的代理服务器来访问一个网址。

一 个PAC文件包含一个JavaScript形式的函数“FindProxyForURL(url, host)”。这个函数返回一个包含一个或多个访问规则的字符串。用户代理根据这些规则适用一个特定的代理其或者直接访问。当一个代理服务器无法响应的时 候，多个访问规则提供了其他的后备访问方法。浏览器在访问其他页面以前，首先访问这个PAC文件。PAC文件中的URL可能是手工配置的，也可能是是通过 网页的网络代理自发现协议（Web Proxy Autodiscovery Protocol）自动配置的。

上面是从维基百科摘录的关于PAC的解释，我做了一个简单的图片解释什么是PAC：

动手修改 ShadowsocksR 客户端中 的 PAC 规则实现自动代理
PAC原理

简单的讲，PAC就是一种配置，它能让你的浏览器智能判断哪些网站走代理，哪些不需要走代理。用过Shadowsocks的朋友应该会知道，shadowsocksR.exe同级目录下有一个 pac.txt 文件，这正是我们本文刚刚所说的pac配置文件。

动手修改 ShadowsocksR 客户端中 的 PAC 规则实现自动代理

打开 pac.txt 文件，可以看到如下内容

动手修改 ShadowsocksR 客户端中 的 PAC 规则实现自动代理

可以看到pac配置文件是用的JavaScript语法，里面有一个变量 rules，是一个JSon数组格式的数据类型，数组里面存放的是各种URL的通配符，那么在pac模式下，如果当访问符合这个数组里面任意一个URL通配符的网址时，系统会走代理，反之直连。比如图中pac配置，如果访问 http://www.cloudflare.com/index.php 时，会走代理，而访问百度、新浪等国内网站则会选择直连方式。
PAC的优势

PAC自动代理属于智能判断模式，相比全局代理，它的优点有：

    不影响国内网站的访问速度，防止无意义的绕路
    节省Shadowsocks服务的流量，节省服务器资源
    控制方便

PAC文件及user-rule文件的语法规则

那么，当一个网站被墙，如何添加到PAC里面让其能够正常访问呢？在Shadowsocks里面，可以有如下两个方式：
1. 添加到 pac.txt 文件中

编辑 pac.txt 文件，模仿里面的一些URL通配符，再添加一个，例如 “||ip138.com”,，注意不要忘记了,半角逗号，那么意思就是所有 ip138.com 域名下的网址都将走Shadowsocks代理，打开www.ip138.com可以看到IP已经变成Shadowsocks所用的国外代理了

动手修改 ShadowsocksR 客户端中 的 PAC 规则实现自动代理
2. 添加到 user-rule.txt 文件中

在 pac.txt 同目录下新建一个 user-rule.txt 文件，这里和 pac.txt 文件语法不完全相同，user-rule文件中，每一行表示一个URL通配符，但是通配符语法类似。例如添加一行||ip138.com^，然后记得右键小飞机 – PAC – 更新本地PAC为GFWList，然后在浏览器中打开 www.ip138.com 可以看到IP已经变成Shadowsocks所用的国外代理IP了。

动手修改 ShadowsocksR 客户端中 的 PAC 规则实现自动代理

user-rule文件

注意末尾不要忘记 ^ 符号，意思是要么在这个符号的地方结束，要么后面跟着?,/等符号。

自定义代理规则的设置语法与GFWlist相同，语法规则如下：

    通配符支持。比如*.example.com/*实际书写时可省略*， 如.example.com/， 和*.example.com/*效果一样
    正则表达式支持。以\开始和结束， 如 \[\w]+:\/\/example.com\
    例外规则 @@，如 @@*.example.com/* 满足@@后规则的地址不使用代理
    匹配地址开始和结尾 |，如 |http://example.com、example.com|分别表示以http://example.com开始和以example.com结束的地址
    || 标记，如 ||example.com 则http://example.com、https://example.com、ftp://example.com等地址均满足条件
    注释 !。 如 !我是注释

更多user-rule.txt语法规则，可以参考AdBlockPlus过滤规则https://adblockplus.org/en/filter-cheatsheet
